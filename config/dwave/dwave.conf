# Perfil predeterminado, se usará si no se especifica otro.
[defaults]
# (Opcional) Nombre del perfil predeterminado a usar de los listados abajo
# Si no se especifica `default_solver` o `default_client` aquí,
# se tomarán del perfil referenciado por `default_profile_name` o
# de la primera sección con `token` si `default_profile_name` no está.
token = 
default_profile_name = leap_profile_Iker_Etxebarria

[default-solver]
solver = {"qpu": true, "num_qubits__gt": 3000}

# --- Perfil 1: Configuración estándar para Leap ---
[leap_profile_Iker_Etxebarria]
# (Opcional) Endpoint de la API de D-Wave Leap.
# Generalmente no necesitas cambiar esto a menos que D-Wave te lo indique.
endpoint = https://cloud.dwavesys.com/sapi/v2/

# (Requerido) Tu token de API personal de D-Wave Leap.
# ¡REEMPLAZA ESTO CON TU TOKEN REAL!
token = ABC-1234567890abcdef1234567890abcdef

# (Opcional) El cliente a usar por defecto con este perfil.
# Puede ser 'qpu', 'hybrid', 'software'.
# Si no se especifica, DWaveSampler intentará determinarlo o usar un QPU.
client = qpu

# (Opcional) El nombre del solver a usar por defecto con este perfil.
# Si no se especifica, DWaveSampler elegirá un QPU disponible
# o el solver híbrido predeterminado si client='hybrid'.

# Solver puede ser un string con el nombre del solver o un diccionario mas detallado 
#que permite mas control sobre el sistema.
## String ejemplo:
# solver = Advantage_system6.1
# solver = hybrid_binary_quadratic_model_version2
## dict ejemplo:
# solver=solver_criteria
# solver_criteria = {
#     name(str): solver name/id,
#     qpu (bool): Solver is a QPU?'            
#     software (bool): Solver is a software solver?   
#     online (bool, default=True): Is solver online?
#     num_active_qubits (int): Number of active qubits. Less then or equal to num_qubits.
#     avg_load (float): Solver’s average load (similar to Unix load average).
#     'topology__type': 'pegasus',              
#     'order_by': ['-num_active_qubits', '-chip_id'] 
# }

# (Opcional) Proxy, si necesitas uno para acceder a internet
# proxy = http://user:pass@proxyserver:port/


# --- Perfil 2: Otro ejemplo, quizás para un proyecto diferente o una cuenta de prueba ---
[project_alpha_testing]
endpoint = https://url.del.endpoint.de.pruebas/sapi/v2/
token = XYZ-anotherapitokenvalueforprojectalpha
client = hybrid
solver = specific_hybrid_solver_for_alpha
# Puedes añadir otras configuraciones como `region` si es relevante para tu endpoint

# --- Perfil 3: Para un solver específico ---
[my_dw2000q_profile]
token = ABC-1234567890abcdef1234567890abcdef # Mismo token si es la misma cuenta
client = qpu
solver = DW_2000Q_6 # Especifica el solver DW_2000Q_6

# --- Perfil 4: Para desarrollo local con un simulador (si tuvieras uno configurado así) ---
# (Esto es más teórico para DWaveSampler, ya que normalmente se conecta a la nube,
# pero la estructura de perfiles es general)
# [local_simulator_profile]
# endpoint = http://localhost:1234/ # Ejemplo de endpoint local
# client = software
# solver = MyLocalSimulatedAnnealer